require("lost.guiro.Bounds")
g = lost.guiro

screen = guiro:Screen
{
  id = "screen",
  bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(800), g.habs(600)),

  guiro:UserInterface
  {
    id = "ui",
    bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(800), g.habs(600)),

    guiro:Window
    {
      bounds = g.Bounds(g.xcenter(), g.ycenter(), g.wrel(0.5), g.hrel(0.5)),
      header =
      {
        height = 25
      },

      guiro:Image
      {
        bounds = g.Bounds(g.xleft(), g.ytop({abs=-25}), g.wrel(0.5), g.hrel(0.5, -25)),
        bitmap = lost.bitmap.Bitmap(guiro:File("stubs.jpg")),
        stretch = true
      },
      guiro:Image
      {
        bounds = g.Bounds(g.xleft(), g.ybottom(), g.wrel(0.5), g.hrel(0.5)),
        bitmap = lost.bitmap.Bitmap(guiro:File("stubs.jpg")),
        stretch = true
      },
      guiro:Image
      {
        bounds = g.Bounds(g.xright(), g.ytop({abs=-25}), g.wrel(0.5), g.hrel(0.5, -25)),
        bitmap = lost.bitmap.Bitmap(guiro:File("stubs.jpg")),
        stretch = true
      },
      guiro:Image
      {
        bounds = g.Bounds(g.xright(), g.ybottom(), g.wrel(0.5), g.hrel(0.5)),
        bitmap = lost.bitmap.Bitmap(guiro:File("stubs.jpg")),
        stretch = true
      }
    },

    guiro:Window
    {
      id = "window",
      bounds = g.Bounds(g.xleft(), g.ybottom(), g.wrel(0.5), g.hrel(0.5)),
      header =
      {
        height = 25
      },

      label = guiro:Label
      {
        bounds = g.Bounds(g.xabs(5), g.yabs(282), g.wabs(390), g.habs(25)),
        text = "funky window"
      },

      guiro:Button
      {
        id = "button",
        bounds = g.Bounds(g.xabs(340), g.yabs(10), g.wabs(50), g.habs(40)),
        fadeStates = true,
        label = guiro:Label
        {
          bounds = g.Bounds(g.xabs(10), g.yabs(15), g.wabs(50), g.habs(40)),
          text = "Small"
        },
        images =
        {
          released = guiro:Image
          {
            bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(50), g.habs(40)),
            bitmap = lost.bitmap.Bitmap(guiro:File("defaultButton.png")),
            cornerBounds =
            {
              left = 10,
              right = 10,
              top = 10,
              bottom = 10
            }
          },
          hovered = guiro:Image
          {
            bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(50), g.habs(40)),
            bitmap = lost.bitmap.Bitmap(guiro:File("defaultButton.png")),
            cornerBounds =
            {
              left = 10,
              right = 10,
              top = 10,
              bottom = 10
            }
          },
          pressed = guiro:Image
          {
            bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(50), g.habs(40)),
            bitmap = lost.bitmap.Bitmap(guiro:File("defaultButton.png")),
            cornerBounds =
            {
              left = 10,
              right = 10,
              top = 10,
              bottom = 10
            }
          }
        }
      },

      guiro:Button
      {
        bounds = g.Bounds(g.xabs(290), g.yabs(50), g.wabs(100), g.habs(50)),
        fadeStates = true,
        label = guiro:Label
        {
          bounds = g.Bounds(g.xabs(30), g.yabs(20), g.wabs(100), g.habs(50)),
          text = "Medium"
        },
        images =
        {
          released = guiro:Image
          {
            bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(100), g.habs(50)),
            bitmap = lost.bitmap.Bitmap(guiro:File("defaultButton.png")),
            cornerBounds =
            {
              left = 10,
              right = 10,
              top = 10,
              bottom = 10
            }
          },
          hovered = guiro:Image
          {
            bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(100), g.habs(50)),
            bitmap = lost.bitmap.Bitmap(guiro:File("defaultButton.png")),
            cornerBounds =
            {
              left = 10,
              right = 10,
              top = 10,
              bottom = 10
            }
          },
          pressed = guiro:Image
          {
            bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(100), g.habs(50)),
            bitmap = lost.bitmap.Bitmap(guiro:File("defaultButton.png")),
            cornerBounds =
            {
              left = 10,
              right = 10,
              top = 10,
              bottom = 10
            }
          }
        }
      },

      guiro:Button
      {
        bounds = g.Bounds(g.xabs(240), g.yabs(100), g.wabs(150), g.habs(75)),
        fadeStates = true,
        label = guiro:Label
        {
          bounds = g.Bounds(g.xabs(60), g.yabs(30), g.wabs(150), g.habs(75)),
          text = "Large"
        },
        images =
        {
          released = guiro:Image
          {
            bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(150), g.habs(75)),
            bitmap = lost.bitmap.Bitmap(guiro:File("defaultButton.png")),
            cornerBounds =
            {
              left = 10,
              right = 10,
              top = 10,
              bottom = 10
            }
          },
          hovered = guiro:Image
          {
            bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(150), g.habs(75)),
            bitmap = lost.bitmap.Bitmap(guiro:File("defaultButton.png")),
            cornerBounds =
            {
              left = 10,
              right = 10,
              top = 10,
              bottom = 10
            }
          },
          pressed = guiro:Image
          {
            bounds = g.Bounds(g.xabs(0), g.yabs(0), g.wabs(150), g.habs(75)),
            bitmap = lost.bitmap.Bitmap(guiro:File("defaultButton.png")),
            cornerBounds =
            {
              left = 10,
              right = 10,
              top = 10,
              bottom = 10
            }
          }
        }
      },

      guiro:AnimatedImage
      {
        id = "fugly",
        bounds = g.Bounds(g.xabs(320), g.yabs(185), g.wabs(80), g.habs(80)),
        bitmap = lost.bitmap.Bitmap(guiro:File("fugly.png")),
        frameSize = lost.math.Rect(0, 0, 153, 184),
        interval = 0.05
      },
      
      guiro:Slider
      {
        id = "slider",
        bounds = g.Bounds(g.xabs(10), g.yabs(115), g.wabs(25), g.habs(150)),
        orientation = lost.guiro.controls.Slider.Orientation.vertical,
        min = 0,
        max = 1,
        steps = 0,
        value = 1,
        listeners =
        {
          [lost.guiro.controls.Slider.SliderChange] = function(event)
            screen("ui")("window")("image").alpha = event.value
          end
        }
      },

      guiro:Slider
      {
        id = "slider2",
        bounds = g.Bounds(g.xabs(50), g.yabs(240), g.wabs(150), g.habs(25)),
        orientation = lost.guiro.controls.Slider.Orientation.horizontal,
        min = 0,
        max = 1,
        steps = 1,
        value = 1,
        listeners =
        {
          [lost.guiro.controls.Slider.SliderChange] = function(event)
            if event.value == screen("ui")("window")("slider2").min then
              screen("ui")("window")("image").filter = gl.GL_NEAREST
            elseif event.value == screen("ui")("window")("slider2").max then
              screen("ui")("window")("image").filter = gl.GL_LINEAR
            end
          end
        }
      },

      guiro:Image
      {
        id = "image",
        bounds = g.Bounds(g.xabs(50), g.yabs(25), g.wabs(180), g.habs(200)),
        bitmap = lost.bitmap.Bitmap(guiro:File("stubs.jpg")),
        stretch = true,
        style = guiro:Style
        {
          borderColor = lost.common.Color(0,0,0,1)
        },
        listeners =
        {
          [lost.application.MouseEvent.MOUSE_DOWN] = function(event)
            local mouseEvent = lost.application.MouseEvent.cast(event)
            if screen("ui")("window")("image"):globalRect():contains(mouseEvent.pos) then
              screen("ui")("window")("image").stretch = not screen("ui")("window")("image").stretch
            end
          end

        }
      },
      
      guiro:Label
      {
        id="label",
        bounds = g.Bounds(g.xabs(5), g.yabs(5), g.wabs(100), g.habs(30)),
        text="Hello World!",
        fontSize = 16
      }
    }
  }
}
