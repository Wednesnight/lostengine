require("lost.application.Application")

function lost.application.Application:configure(event)
  self.config.displayAttributes = lost.common.DisplayAttributes()
  self.config.displayAttributes.width = 800;
  self.config.displayAttributes.height = 600;
  self.config.displayAttributes.redbits = 8;
  self.config.displayAttributes.bluebits = 8;
  self.config.displayAttributes.greenbits = 8;
  self.config.displayAttributes.alphabits = 8;
  self.config.displayAttributes.depthbits = 24;
  self.config.displayAttributes.stencilbits = 0;
  self.config.displayAttributes.fullscreen = false;
  self.config.displayAttributes.title = "GuiroTest";

  self:addEventListener(lost.application.ResizeEvent.MAIN_WINDOW_RESIZE, resizeHandler)

  self:addEventListener(lost.application.ApplicationEvent.RUN, runHandler)
  self:addEventListener(lost.application.ApplicationEvent.QUIT, quitHandler)

  self:addEventListener(lost.application.KeyEvent.KEY_DOWN, keyHandler)
  self:addEventListener(lost.application.KeyEvent.KEY_UP, keyHandler)
end

function lost.application.Application:init(event)
  log.debug("init")

  require("lost.io.Guiro")
  local foo = lost.io.Loader(globals.app.loader)
  foo:load("mainScreen.lua")

  controls = {}
  controls.fpsMeter = lost.common.FpsMeter(self.context)

  globals.timer = lost.application.Timer("luarender", 0.015)
  globals.timer:addEventListener(lost.application.TimerEvent.TIMER_FIRED, renderHandler)
end

function keyHandler(event)
  keyEvent = lost.application.KeyEvent.cast(event)
  
  if (keyEvent.pressed) then
  
    if (keyEvent.key == lost.application.K_ESCAPE) then
      globals.app:quit()
    end
  
  end
end

function runHandler(event)
  log.debug("run")
end

function quitHandler(event)
  log.debug("quit")
end

function renderHandler(event)
  local timerEvent = lost.application.TimerEvent.cast(event)

  gl.glClearColor(0.0, 0.0, 0.0, 0.0) gl.GLDEBUG()
  gl.glClear(gl.GL_COLOR_BUFFER_BIT or gl.GL_DEPTH_BUFFER_BIT) gl.GLDEBUG()

  lost.gl.utils.set2DProjection(lost.math.Vec2(0,0), lost.math.Vec2(globals.app.displayAttributes.width, globals.app.displayAttributes.height))
  gl.glMatrixMode(gl.GL_MODELVIEW)
  gl.glLoadIdentity()
  gl.glEnableClientState(gl.GL_VERTEX_ARRAY) gl.GLDEBUG()
  gl.glDisable(gl.GL_DEPTH_TEST) gl.GLDEBUG()
  gl.glDisable(gl.GL_TEXTURE_2D) gl.GLDEBUG()

  controls.fpsMeter:render(globals.app.displayAttributes.width - controls.fpsMeter.width, 0, timerEvent.passedSec)

  gl.glDisableClientState(gl.GL_VERTEX_ARRAY) gl.GLDEBUG()
  
  globals.app:swapBuffers()
end

function resizeHandler(event)
  local resizeEvent = lost.application.ResizeEvent.cast(event)

  gl.glViewport(0, 0, resizeEvent.width, resizeEvent.height) gl.GLDEBUG()
end
