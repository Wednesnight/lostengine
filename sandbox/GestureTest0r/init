require("Application")

function lost.application.Application:configure(event)
  self.config.displayAttributes = lost.common.DisplayAttributes()
  self.config.displayAttributes.width = 800;
  self.config.displayAttributes.height = 600;
  self.config.displayAttributes.redbits = 8;
  self.config.displayAttributes.bluebits = 8;
  self.config.displayAttributes.greenbits = 8;
  self.config.displayAttributes.alphabits = 8;
  self.config.displayAttributes.depthbits = 24;
  self.config.displayAttributes.stencilbits = 0;
  self.config.displayAttributes.fullscreen = false;
  self.config.displayAttributes.title = "GestureTest0r";
end

function lost.application.Application:init(event)
  self:addEventListener(lost.application.KeyEvent.KEY_DOWN, self, self.handleKey)
  self:addEventListener(lost.application.MouseEvent.MOUSE_DOWN, self, self.handleClick)
  self:addEventListener(lost.application.MouseEvent.MOUSE_MOVE, self, self.handleMove)
  self:addEventListener(lost.application.MouseEvent.MOUSE_UP, self, self.handleClick)
end

function lost.application.Application:handleKey(event)
  local keyEvent = lost.application.KeyEvent.cast(event)

  if (keyEvent.key == lost.application.K_ESCAPE) then
    globals.app:quit()
  end
end

function lost.application.Application:handleClick(event)
  local mouseEvent = lost.application.MouseEvent.cast(event)

  self.gestureActive = mouseEvent.pressed and mouseEvent.button == lost.application.MB_LEFT
end

function lost.application.Application:handleMove(event)
  local mouseEvent = lost.application.MouseEvent.cast(event)

  if (self.gestureActive) then
    self:processGesture(mouseEvent)
  end
end

function lost.application.Application:processGesture(event)
end
