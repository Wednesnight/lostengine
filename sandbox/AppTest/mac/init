
require("foo")
require("baz")


function dumpPair(key, value)
  log.debug("  ".. tostring(key) .." (".. tostring(value) ..")")
end

function dump(object)
  local info = class_info(object)
  log.debug(info.name ..":")
  table.foreach(info.methods, dumpPair)
  table.foreach(info.attributes, dumpPair)
end

function preinit(event)
  log.debug("preinit, building config")

  config = {}
  config.displayAttributes = lost.common.DisplayAttributes()

  config.displayAttributes.width = 320;
  config.displayAttributes.height = 480;
  config.displayAttributes.redbits = 8;
  config.displayAttributes.bluebits = 8;
  config.displayAttributes.greenbits = 8;
  config.displayAttributes.alphabits = 8;
  config.displayAttributes.depthbits = 24;
  config.displayAttributes.stencilbits = 0;
  config.displayAttributes.fullscreen = false;
  config.displayAttributes.title = "AppTest";
  
  local mt = getmetatable(config.displayAttributes)
  if (mt.__luabind_class) then
    log.debug("is class: ".. tostring(mt.__luabind_class))
  end

  dump(app)
  dump(app.loader)
  dump(config.displayAttributes)

end

function init(event)
  log.debug("got event: "..event.type)
end

function key(event)
  log.debug("got event: "..event.type)
--  log.debug("key: "..event.key)
--  log.debug("pressed: "..event.pressed)
  app:quit()
  log.debug("gc mem: "..collectgarbage("count"))
end

app:addEventListener("applicationPreInit", preinit)
app:addEventListener("applicationInit", init)
app:addEventListener("keyDown", key)

controller = {}
controller.data = 13;
controller.keyDown = function(self, event)
  log.debug("in controller keyDown: "..self.data);
end

app:addEventListener("keyDown", controller, controller.keyDown)
