/**
 * $Id: xmlparser.cpp 76 2007-03-23 11:08:00Z unwesen $
 *
 * Copyright (C) 2007 the authors.
 *
 * Author: Tony Kostanjsek <lobotony@users.sourceforge.net>
 *
 * This file is part of the Fhtagn! C++ Library, and may be distributed under
 * the following license terms:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **/
#include <iostream>
#include <string>
#include <stdexcept>
#include <fstream>
#include <sstream>

#include "fhtagn/xml/parser.h"
#include "fhtagn/xml/defaulthandler.h"

using namespace std;
using namespace fhtagn;

int main (int argc, char * const argv[])
{
	try
	{
	
		string filename = argv[1];
		ifstream file(filename.c_str());
		if(!file) throw runtime_error("couldn't open file: '"+filename+"'");
		ostringstream os;
		os << file.rdbuf();
		cout << "----- loaded data -----" << endl;
		cout << os.str() << endl;
		cout << "----- ends ------------" << endl;

		xml::defaulthandler handler;
		xml::parser<xml::defaulthandler> parser;

		if(!parser.parse(os.str(), handler)) throw runtime_error("couldn't fully parse document");
		
		cout << " -- Ok -- " << endl;
		
		return 0;
	}
	catch(exception& ex)
	{
		cout << "caught error: " << ex.what() << endl;
		return 1;
	}
}
